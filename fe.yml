apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: ingress-nginx
  labels:
    app: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: crmreg.azurecr.io/crm-frontend
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config-volume
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
      volumes:
        - name: nginx-config-volume
          configMap:
            name: frontend-nginx-config
      imagePullSecrets: 
      - name: acr-secret


---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: ingress-nginx
  labels:
    app: frontend
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: frontend
  type: ClusterIP
---



apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
  namespace: ingress-nginx
  # annotations:
    # cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: nginx # Ensure this matches your ingress class
  rules:
    - host: crmfe.careerdeveloper.xyz # Replace with your domain
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 80
  tls:
  - hosts:
    - crmfe.careerdeveloper.xyz
    secretName: crmfe-tls  




---

apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-nginx-config
  namespace: ingress-nginx
data:
  default.conf: |
    server {
        listen       80;
        listen  [::]:80;
        server_name  localhost;

        location / {
            root   /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;  # Fallback to index.html for SPA routes
            index  index.html index.htm;
        }
        # location /api/invoice/uploadAndGetInvoiceData {
        #     client_max_body_size 10M; # Increase file size limit if needed
        #     proxy_pass proxy_pass http://backend-service.ingress-nginx.svc.cluster.local:5000; # Replace with actual backend service
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     proxy_request_buffering off; # Disable request buffering
        # }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }

---

apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: sharma.vishal009.11@gmail.com # Replace with your email
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx

